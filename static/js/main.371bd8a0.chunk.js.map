{"version":3,"sources":["dep/poker.js","components/card.jsx","components/cards.jsx","components/panel.jsx","data/cardData.js","components/pickerDialog.jsx","action.js","styles/style.js","components/appbar.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["Poker","window","Card","props","card","data","_","isEmpty","getBackData","getCardData","suit","rank","src","onClick","width","col","alt","Cards","className","cards","map","index","backgroundColor","key","onCardClick","defaultProps","Panel","winner","isCommumity","Chip","icon","label","color","onDelete","undefined","onDeletePlayer","style","marginBottom","flexWrap","alignSelf","Suit","Rank","ACE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","TEN","JACK","QUEEN","KING","Hearts","Object","entries","Diamonds","Spades","Clubs","Transition","React","forwardRef","ref","Slide","direction","TabPanel","children","value","other","role","hidden","id","Box","p","a11yProps","PickerDialog","useState","setValue","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","handleClose","TransitionComponent","AppBar","position","Tabs","variant","onChange","event","newValue","Tab","Types","ACTION_BUTTON","background","borderRadius","border","height","margin","padding","boxShadow","display","useStyles","makeStyles","root","flexGrow","iconButton","marginRight","spacing","title","marginLeft","Appbar","classes","Toolbar","Typography","IconButton","onAddClick","edge","onResetClick","Alert","elevation","connect","state","toJS","dispatch","handleReset","type","handleAddPlayer","handleDeletePlayer","playerIndex","payload","handleStartEditing","cardIndex","handleCardChanged","_p1","_p2","showErrorPrompt","hideErrorPrompt","handleSolve","Container","maxWidth","align","community","players","player","Button","isValid","Snackbar","anchorOrigin","vertical","horizontal","errorPrompt","autoHideDuration","severity","showDialog","editing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","fromJS","setCard","get","setIn","validate","forEach","push","i","length","j","isEqual","set","convertToString","ret","clearWinnerState","reducer","action","plainState","updateIn","arr","splice","hands","filter","Hand","solve","solvedHands","winners","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.371bd8a0.chunk.js","sourcesContent":["let Poker = window.Poker;\nexport default Poker;\n","import React from \"react\";\nimport Poker from \"../dep/poker\";\nimport _ from \"lodash\";\n\nconst Card = (props) => {\n  let { card } = props;\n  let data = _.isEmpty(card)\n    ? Poker.getBackData(200)\n    : Poker.getCardData(200, card.suit, card.rank);\n  return (\n    <img\n      src={data}\n      onClick={props.onClick}\n      width={`${100 / props.col}%`}\n      alt=\"\"\n    />\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./card\";\n\nconst Cards = (props) => {\n  return (\n    <div className=\"Cards\">\n      {props.cards.map((card, index) => {\n        return (\n          <Card\n            {...props}\n            backgroundColor=\"aqua\"\n            key={index}\n            card={card}\n            onClick={() => {\n              props.onCardClick(index, props.index, card);\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\nCards.defaultProps = {\n  col: 5,\n};\nexport default Cards;\n","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport Cards from \"./cards\";\n\nlet Panel = (props) => {\n  const winner = props.winner && props.winner === true;\n  const index = props.index + 1;\n  const isCommumity = index === 0;\n  return (\n    <div className=\"Panel\">\n      <Chip\n        icon={<FaceIcon />}\n        label={\n          winner ? \"WINNER\" : isCommumity ? \"Community\" : `Player ${index}`\n        }\n        className={winner ? \"Winner\" : \"\"}\n        color=\"primary\"\n        onDelete={\n          isCommumity\n            ? undefined\n            : () => {\n                props.onDeletePlayer(props.index);\n              }\n        }\n        style={{\n          marginBottom: \"1em\",\n          flexWrap: \"wrap\",\n          width: \"12em\",\n          alignSelf: \"flex-start\",\n        }}\n      />\n\n      <Cards {...props} />\n    </div>\n  );\n};\n\nexport default Panel;\n","export const Suit = {\n  HEART: \"h\",\n  DIAMOND: \"d\",\n  SPADE: \"s\",\n  CLUB: \"c\",\n};\n\nexport const Rank = {\n  ACE: \"A\",\n  TWO: \"2\",\n  THREE: \"3\",\n  FOUR: \"4\",\n  FIVE: \"5\",\n  SIX: \"6\",\n  SEVEN: \"7\",\n  EIGHT: \"8\",\n  NINE: \"9\",\n  TEN: \"10\",\n  JACK: \"J\",\n  QUEEN: \"Q\",\n  KING: \"K\",\n};\n\nexport const Hearts = Object.entries(Rank).map((key) => {\n  return { suit: Suit.HEART, rank: key[1] };\n});\n\nexport const Diamonds = Object.entries(Rank).map((key) => {\n  return { suit: Suit.DIAMOND, rank: key[1] };\n});\n\nexport const Spades = Object.entries(Rank).map((key) => {\n  return { suit: Suit.SPADE, rank: key[1] };\n});\n\nexport const Clubs = Object.entries(Rank).map((key) => {\n  return { suit: Suit.CLUB, rank: key[1] };\n});\n\nexport const Default = { suit: Suit.HEART, rank: Rank.ACE };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { Hearts, Diamonds, Spades, Clubs } from \"../data/cardData\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Cards from \"./cards\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst PickerDialog = (props) => {\n  const [value, setValue] = React.useState(0);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={props.open}\n      onClose={props.handleClose}\n      TransitionComponent={Transition}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          aria-label=\"simple tabs example\"\n          variant=\"fullWidth\"\n          onChange={handleChange}\n        >\n          <Tab label=\"红桃\" {...a11yProps(0)} />\n          <Tab label=\"方片\" {...a11yProps(1)} />\n          <Tab label=\"黑桃\" {...a11yProps(2)} />\n          <Tab label=\"草花\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n        <Cards cards={Hearts} onCardClick={props.onCardClick} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Cards cards={Diamonds} onCardClick={props.onCardClick} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Cards cards={Spades} onCardClick={props.onCardClick} />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <Cards cards={Clubs} onCardClick={props.onCardClick} />\n      </TabPanel>\n    </Dialog>\n  );\n};\n\nexport default PickerDialog;\n","export const Types = {\n  RESET: \"reset\",\n  ADD_PLAYER: \"add-player\",\n  DELETE_PLAYER: \"delete-player\",\n  START_EDITING: \"start-editing\",\n  CARD_CHANGED: \"card-changed\",\n  SHOW_ERROR_PROMPT: \"show-error\",\n  HIDE_ERROR_PROMPT: \"hide-error\",\n  SOLVE: \"solve\",\n};\n","export const ACTION_BUTTON = {\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n  borderRadius: 3,\n  border: 0,\n  color: \"white\",\n  height: 48,\n  margin: \"3em 0 5em 0\",\n  padding: \"0 3em 0 3em\",\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  display: \"inline-flex\",\n  alignSelf: \"center\",\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n  },\n}));\nconst Appbar = (props) => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"sticky\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Texas Hold'em Helper\n        </Typography>\n        <IconButton\n          onClick={props.onAddClick}\n          edge=\"start\"\n          className={classes.iconButton}\n          color=\"inherit\"\n        >\n          <AddIcon />\n        </IconButton>\n\n        <IconButton\n          edge=\"start\"\n          className={classes.iconButton}\n          color=\"inherit\"\n          onClick={props.onResetClick}\n        >\n          <ResetIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Appbar;\n","import \"./App.css\";\nimport Panel from \"./components/panel\";\nimport PickerDialog from \"./components/pickerDialog\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Types } from \"./action\";\nimport { ACTION_BUTTON } from \"./styles/style\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Appbar from \"./components/appbar\";\nimport Container from \"@material-ui/core/Container\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst App = (props) => {\n  return (\n    <div>\n      <Appbar\n        position=\"fixed\"\n        onAddClick={props.handleAddPlayer}\n        onResetClick={props.handleReset}\n      />\n\n      <Container maxWidth=\"sm\" align=\"center\">\n        <Panel\n          onCardClick={props.handleStartEditing}\n          cards={props.community}\n          index={-1}\n          key={-1}\n          onDeletePlayer={() => {}}\n          winner={false}\n        />\n        {props.players.map((player, index) => {\n          return (\n            <Panel\n              onCardClick={props.handleStartEditing}\n              onDeletePlayer={props.handleDeletePlayer}\n              cards={player.cards}\n              key={index}\n              index={index}\n              winner={player.winner}\n            />\n          );\n        })}\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={ACTION_BUTTON}\n          onClick={props.isValid ? props.handleSolve : props.showErrorPrompt}\n        >\n          Solve\n        </Button>\n      </Container>\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={props.errorPrompt}\n        autoHideDuration={3000}\n        onClose={props.hideErrorPrompt}\n      >\n        <Alert severity=\"error\">Duplicate card</Alert>\n      </Snackbar>\n\n      <PickerDialog\n        open={props.showDialog}\n        onCardClick={props.handleCardChanged}\n        editing={props.editing}\n      />\n    </div>\n  );\n};\n\nconst stateToProps = (state) => {\n  return state.toJS();\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    handleReset: () => {\n      dispatch({\n        type: Types.RESET,\n      });\n    },\n    handleAddPlayer: () => {\n      dispatch({\n        type: Types.ADD_PLAYER,\n      });\n    },\n    handleDeletePlayer: (playerIndex) => {\n      dispatch({\n        type: Types.DELETE_PLAYER,\n        payload: {\n          playerIndex,\n        },\n      });\n    },\n    handleStartEditing: (cardIndex, playerIndex) => {\n      dispatch({\n        type: Types.START_EDITING,\n        payload: {\n          cardIndex,\n          playerIndex,\n        },\n      });\n    },\n\n    handleCardChanged: (_p1, _p2, card) => {\n      dispatch({\n        type: Types.CARD_CHANGED,\n        payload: card,\n      });\n    },\n\n    showErrorPrompt: () => {\n      dispatch({\n        type: Types.SHOW_ERROR_PROMPT,\n      });\n    },\n    hideErrorPrompt: () => {\n      dispatch({\n        type: Types.HIDE_ERROR_PROMPT,\n      });\n    },\n\n    handleSolve: () => {\n      dispatch({\n        type: Types.SOLVE,\n      });\n    },\n  };\n};\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Types } from \"../action\";\nimport { fromJS } from \"immutable\";\nimport _ from \"lodash\";\nimport { Hand } from \"pokersolver\";\nimport { Suit, Rank } from \"../data/cardData\";\n\nconst initState = fromJS({\n  showDialog: false,\n  community: [\n    { suit: Suit.HEART, rank: Rank.TWO },\n    { suit: Suit.HEART, rank: Rank.THREE },\n    { suit: Suit.CLUB, rank: Rank.FOUR },\n    { suit: Suit.DIAMOND, rank: Rank.KING },\n    { suit: Suit.SPADE, rank: Rank.KING },\n  ],\n  players: [\n    {\n      cards: [\n        { suit: Suit.HEART, rank: Rank.ACE },\n        { suit: Suit.HEART, rank: Rank.FIVE },\n      ],\n    },\n    {\n      cards: [\n        { suit: Suit.CLUB, rank: Rank.ACE },\n        { suit: Suit.CLUB, rank: Rank.KING },\n      ],\n    },\n  ],\n  editing: {},\n  isValid: true,\n  errorPrompt: false,\n});\n\nconst setCard = (state, key, value) => {\n  const editing = state.get(\"editing\");\n  if (editing.get(\"playerIndex\") === -1) {\n    return state.setIn([\"community\", editing.get(\"cardIndex\"), key], value);\n  } else {\n    return state.setIn(\n      [\n        \"players\",\n        editing.get(\"playerIndex\"),\n        \"cards\",\n        editing.get(\"cardIndex\"),\n        key,\n      ],\n      value\n    );\n  }\n};\n\nconst validate = (state) => {\n  const cards = [];\n\n  state\n    .get(\"community\")\n    .toJS()\n    .forEach((card) => {\n      cards.push(card);\n    });\n\n  state\n    .get(\"players\")\n    .toJS()\n    .forEach((player) => {\n      player.cards.forEach((card) => {\n        cards.push(card);\n      });\n    });\n\n  for (let i = 0; i < cards.length; i++) {\n    for (let j = i + 1; j < cards.length; j++) {\n      if (_.isEqual(cards[i], cards[j])) {\n        return state.set(\"isValid\", false);\n      }\n    }\n  }\n\n  return state.set(\"isValid\", true);\n};\n\nconst convertToString = (cards) => {\n  let ret = [];\n  cards.forEach((value) => {\n    ret.push((value.rank === \"10\" ? \"T\" : value.rank) + value.suit);\n  });\n\n  return ret;\n};\n\nconst clearWinnerState = (state) => {\n  state.players.forEach((player) => {\n    delete player.winner;\n  });\n  return state;\n};\n\nconst reducer = (state = initState, action) => {\n  let plainState = state.toJS();\n  switch (action.type) {\n    case Types.RESET:\n      plainState.players.map((player) => {\n        player.cards = [{}, {}];\n        delete player.winner;\n        return player;\n      });\n      plainState.community = [{}, {}, {}, {}, {}];\n      return fromJS(plainState);\n    case Types.ADD_PLAYER:\n      return state.updateIn([\"players\"], (players) =>\n        players.push(fromJS({ cards: [{}, {}] }))\n      );\n    case Types.DELETE_PLAYER:\n      return state.updateIn([\"players\"], (arr) =>\n        arr.splice(action.payload.playerIndex, 1)\n      );\n    case Types.START_EDITING:\n      return state\n        .set(\"editing\", fromJS(action.payload))\n        .set(\"showDialog\", true);\n\n    case Types.CARD_CHANGED:\n      return validate(\n        setCard(\n          setCard(\n            fromJS(clearWinnerState(plainState)),\n            \"suit\",\n            action.payload.suit\n          ),\n          \"rank\",\n          action.payload.rank\n        )\n      ).set(\"showDialog\", false);\n\n    case Types.SHOW_ERROR_PROMPT:\n      return state.set(\"errorPrompt\", true);\n\n    case Types.HIDE_ERROR_PROMPT:\n      return state.set(\"errorPrompt\", false);\n\n    case Types.SOLVE:\n      clearWinnerState(plainState);\n      let hands = plainState.players\n        .filter((player) => {\n          return !_.isEmpty(player.cards[0]) && !_.isEmpty(player.cards[1]);\n        })\n        .map((player) => {\n          return Hand.solve(\n            convertToString([...player.cards, ...plainState.community])\n          );\n        });\n\n      let solvedHands = Hand.winners(hands);\n\n      hands.forEach((value, index) => {\n        solvedHands.forEach((winner) => {\n          if (_.isEqual(value, winner)) {\n            plainState.players[index].winner = true;\n          }\n        });\n      });\n\n      return fromJS(plainState);\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(\n  reducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}