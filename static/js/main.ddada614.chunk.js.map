{"version":3,"sources":["dep/poker.js","features/solver/components/Card.jsx","features/solver/components/Cards.jsx","data/cardData.js","features/solver/solverSlice.js","features/solver/components/Panel.jsx","features/solver/components/CardPickerDialog.jsx","common/styles/style.js","features/solver/components/Appbar.jsx","common/components/BottomPrompt.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Poker","window","Card","card","onClick","data","_","isEmpty","getBackData","getCardData","suit","rank","src","className","alt","Cards","cards","map","cardIndex","defaultProps","col","Suit","Rank","ACE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","TEN","JACK","QUEEN","KING","Hearts","Object","entries","key","Diamonds","Spades","Clubs","initialState","showDialog","community","players","editing","isValid","clearWinnerState","state","forEach","player","winner","solverSlice","createSlice","name","reducers","reset","action","addPlayer","push","deletePlayer","splice","payload","playerIndex","startEditing","finishEditing","hideErrorPrompt","errorPrompt","solve","every","i","length","j","isEqual","validate","containsEmptyCard","hands","item","Hand","ret","value","convertToString","solvedHands","winners","index","actions","solverSelector","solver","Panel","isCommumity","dispatch","useDispatch","useSelector","Chip","icon","label","color","onDelete","undefined","style","marginBottom","flexWrap","width","alignSelf","Transition","React","forwardRef","props","ref","Slide","direction","TabPanel","children","other","role","hidden","id","height","Box","p","a11yProps","CardPickerDialog","open","useState","setValue","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","onCardClick","Dialog","TransitionComponent","AppBar","position","Tabs","variant","onChange","event","newValue","Tab","ACTION_BUTTON","background","borderRadius","border","margin","padding","boxShadow","display","useStyles","makeStyles","root","flexGrow","iconButton","marginRight","spacing","title","marginLeft","Appbar","classes","Toolbar","Typography","IconButton","edge","Alert","elevation","BottomPrompt","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","App","Container","maxWidth","align","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","solverReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ddada614.chunk.js","sourcesContent":["let Poker = window.Poker;\nexport default Poker;\n","import React from \"react\";\nimport Poker from \"../../../dep/poker\";\nimport _ from \"lodash\";\n\nconst Card = ({card, onClick}) => {\n  let data = _.isEmpty(card)\n    ? Poker.getBackData(200)\n    : Poker.getCardData(200, card.suit, card.rank);\n  return <img src={data} className=\"Card\" onClick={onClick} alt=\"\" />;\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst Cards = ({ cards, onClick }) => {\n  return (\n    <div className=\"Cards\">\n      {cards.map((card, cardIndex) => {\n        return (\n          <Card\n            key={cardIndex}\n            card={card}\n            onClick={() => {\n              onClick({ cardIndex, card });\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nCards.defaultProps = {\n  col: 5,\n};\nexport default Cards;\n","export const Suit = {\n  HEART: \"h\",\n  DIAMOND: \"d\",\n  SPADE: \"s\",\n  CLUB: \"c\",\n};\n\nexport const Rank = {\n  ACE: \"A\",\n  TWO: \"2\",\n  THREE: \"3\",\n  FOUR: \"4\",\n  FIVE: \"5\",\n  SIX: \"6\",\n  SEVEN: \"7\",\n  EIGHT: \"8\",\n  NINE: \"9\",\n  TEN: \"10\",\n  JACK: \"J\",\n  QUEEN: \"Q\",\n  KING: \"K\",\n};\n\nexport const Hearts = Object.entries(Rank).map((key) => {\n  return { suit: Suit.HEART, rank: key[1] };\n});\n\nexport const Diamonds = Object.entries(Rank).map((key) => {\n  return { suit: Suit.DIAMOND, rank: key[1] };\n});\n\nexport const Spades = Object.entries(Rank).map((key) => {\n  return { suit: Suit.SPADE, rank: key[1] };\n});\n\nexport const Clubs = Object.entries(Rank).map((key) => {\n  return { suit: Suit.CLUB, rank: key[1] };\n});\n\nexport const Default = { suit: Suit.HEART, rank: Rank.ACE };\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { Hand } from \"pokersolver\";\nimport { Suit, Rank } from \"../../data/cardData\";\nconst initialState = {\n  showDialog: false,\n  community: [\n    { suit: Suit.HEART, rank: Rank.TWO },\n    { suit: Suit.HEART, rank: Rank.THREE },\n    { suit: Suit.CLUB, rank: Rank.FOUR },\n    { suit: Suit.DIAMOND, rank: Rank.KING },\n    { suit: Suit.SPADE, rank: Rank.KING },\n  ],\n  players: [\n    {\n      cards: [\n        { suit: Suit.HEART, rank: Rank.ACE },\n        { suit: Suit.HEART, rank: Rank.FIVE },\n      ],\n    },\n    {\n      cards: [\n        { suit: Suit.CLUB, rank: Rank.ACE },\n        { suit: Suit.CLUB, rank: Rank.KING },\n      ],\n    },\n  ],\n  editing: {},\n  isValid: true,\n};\n\nconst clearWinnerState = (state) => {\n  state.players.forEach((player) => {\n    player.winner = false;\n  });\n  return state;\n};\n\nconst convertToString = (cards) => {\n  let ret = [];\n  cards.forEach((value) => {\n    ret.push((value.rank === \"10\" ? \"T\" : value.rank) + value.suit);\n  });\n\n  return ret;\n};\n\nconst validate = (state) => {\n  const cards = [];\n\n  state.community.forEach((card) => {\n    cards.push(card);\n  });\n\n  state.players.forEach((player) => {\n    player.cards.forEach((card) => {\n      cards.push(card);\n    });\n  });\n\n  const allCardsFilled = cards.every((card) => {\n    return !_.isEmpty(card);\n  });\n\n  if (!allCardsFilled) {\n    state.errorPrompt = \"Empty card\";\n    return false;\n  }\n\n  for (let i = 0; i < cards.length; i++) {\n    for (let j = i + 1; j < cards.length; j++) {\n      if (_.isEqual(cards[i], cards[j]) && !_.isEmpty(cards[i])) {\n        state.errorPrompt = \"Duplicate card\";\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst solverSlice = createSlice({\n  name: \"solver\",\n  initialState,\n  reducers: {\n    reset(state, action) {\n      clearWinnerState(state);\n      state.players.map((player) => {\n        player.cards = [{}, {}];\n        return player;\n      });\n      state.community = [{}, {}, {}, {}, {}];\n    },\n\n    addPlayer(state, action) {\n      clearWinnerState(state);\n      state.players.push({ cards: [{}, {}] });\n    },\n\n    deletePlayer(state, action) {\n      clearWinnerState(state);\n      state.players.splice(action.payload.playerIndex, 1);\n    },\n\n    startEditing(state, action) {\n      state.showDialog = true;\n      state.editing = action.payload;\n    },\n\n    finishEditing(state, action) {\n      state.showDialog = false;\n      clearWinnerState(state);\n      const { playerIndex, cardIndex } = state.editing;\n      if (playerIndex === -1) {\n        state.community[cardIndex] = action.payload;\n      } else {\n        state.players[playerIndex].cards[cardIndex] = action.payload;\n      }\n    },\n\n    hideErrorPrompt(state, action) {\n      delete state.errorPrompt;\n    },\n\n    solve(state, action) {\n      clearWinnerState(state);\n      if (!validate(state)) {\n        return;\n      }\n\n      let containsEmptyCard = false;\n      let hands = state.players.map((player) => {\n        let cards = [...state.community];\n        player.cards.forEach((item) => {\n          if (!_.isEmpty(item)) {\n            cards.push(item);\n          } else {\n            containsEmptyCard = true;\n          }\n        });\n\n        return containsEmptyCard ? {} : Hand.solve(convertToString(cards));\n      });\n\n      let solvedHands = Hand.winners(hands);\n\n      hands.forEach((value, index) => {\n        solvedHands.forEach((winner) => {\n          if (_.isEqual(value, winner)) {\n            state.players[index].winner = true;\n          }\n        });\n      });\n    },\n  },\n});\nexport const {\n  reset,\n  addPlayer,\n  deletePlayer,\n  startEditing,\n  finishEditing,\n  hideErrorPrompt,\n  solve,\n} = solverSlice.actions;\nexport const solverSelector = (state) => state.solver;\nexport default solverSlice.reducer;\n","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport Cards from \"./Cards\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deletePlayer, startEditing } from \"../solverSlice\";\n\nlet Panel = ({ playerIndex, winner }) => {\n  const isCommumity = playerIndex === -1;\n  const dispatch = useDispatch();\n\n  const cards = useSelector((state) => {\n    if (playerIndex === -1) {\n      return state.solver.community;\n    } else {\n      return state.solver.players[playerIndex].cards;\n    }\n  });\n\n  const onDeletePlayer = () => {\n    dispatch(deletePlayer({ playerIndex }));\n  };\n\n  const onCardClick = ({cardIndex}) => {\n    dispatch(startEditing({ playerIndex, cardIndex }));\n  };\n\n  return (\n    <div className=\"Panel\">\n      <Chip\n        icon={<FaceIcon />}\n        label={\n          winner\n            ? \"WINNER\"\n            : isCommumity\n            ? \"Community\"\n            : `Player ${playerIndex}`\n        }\n        className={winner ? \"Winner\" : \"\"}\n        color=\"primary\"\n        onDelete={isCommumity ? undefined : onDeletePlayer}\n        style={{\n          marginBottom: \"1em\",\n          flexWrap: \"wrap\",\n          width: \"12em\",\n          alignSelf: \"flex-start\",\n        }}\n      />\n\n      <Cards cards={cards} onClick={onCardClick} />\n    </div>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { Hearts, Diamonds, Spades, Clubs } from \"../../../data/cardData\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Cards from \"./Cards\";\nimport { useDispatch } from \"react-redux\";\nimport { finishEditing } from \"../solverSlice\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n      className=\"Content\"\n      style={{ height: \"100%\" }}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst CardPickerDialog = ({ open }) => {\n  const [value, setValue] = React.useState(0);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const dispatch = useDispatch();\n\n  const onCardClick = ({ card }) => {\n    dispatch(finishEditing(card));\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      TransitionComponent={Transition}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          aria-label=\"simple tabs example\"\n          variant=\"fullWidth\"\n          onChange={handleChange}\n        >\n          <Tab label=\"红桃\" {...a11yProps(0)} />\n          <Tab label=\"方片\" {...a11yProps(1)} />\n          <Tab label=\"黑桃\" {...a11yProps(2)} />\n          <Tab label=\"草花\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n        <Cards cards={Hearts} onClick={onCardClick} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Cards cards={Diamonds} onClick={onCardClick} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Cards cards={Spades} onClick={onCardClick} />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <Cards cards={Clubs} onClick={onCardClick} />\n      </TabPanel>\n    </Dialog>\n  );\n};\n\nexport default CardPickerDialog;\n","export const ACTION_BUTTON = {\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n  borderRadius: 3,\n  border: 0,\n  color: \"white\",\n  height: 48,\n  margin: \"3em 0 5em 0\",\n  padding: \"0 3em 0 3em\",\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  display: \"inline-flex\",\n  alignSelf: \"center\",\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ResetIcon from \"@material-ui/icons/RotateLeft\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { reset, addPlayer } from \"../solverSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n  },\n}));\nconst Appbar = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onResetClicked = () => {\n    dispatch(reset());\n  };\n\n  const onAddClick = () => {\n    dispatch(addPlayer());\n  };\n  return (\n    <AppBar position=\"sticky\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Texas Hold'em Helper\n        </Typography>\n        <IconButton\n          onClick={onAddClick}\n          edge=\"start\"\n          className={classes.iconButton}\n          color=\"inherit\"\n        >\n          <AddIcon />\n        </IconButton>\n\n        <IconButton\n          edge=\"start\"\n          className={classes.iconButton}\n          color=\"inherit\"\n          onClick={onResetClicked}\n        >\n          <ResetIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Appbar;\n","import React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { hideErrorPrompt } from \"../../features/solver/solverSlice\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst BottomPrompt = ({ message }) => {\n  const dispatch = useDispatch();\n\n  const onHideErrorPrompt = () => {\n    dispatch(hideErrorPrompt());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      open={message !== undefined && message !== null}\n      autoHideDuration={3000}\n      onClose={onHideErrorPrompt}\n    >\n      <Alert severity=\"error\">{message}</Alert>\n    </Snackbar>\n  );\n};\n\nexport default BottomPrompt;\n","import \"./App.css\";\nimport Panel from \"./features/solver/components/Panel\";\nimport CardPickerDialog from \"./features/solver/components/CardPickerDialog\";\nimport React from \"react\";\nimport { ACTION_BUTTON } from \"./common/styles/style\";\nimport Button from \"@material-ui/core/Button\";\nimport Appbar from \"./features/solver/components/Appbar\";\nimport Container from \"@material-ui/core/Container\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { solverSelector, solve } from \"./features/solver/solverSlice\";\nimport BottomPrompt from \"./common/components/BottomPrompt\";\n\nconst App = () => {\n  const data = useSelector(solverSelector);\n  const dispatch = useDispatch();\n\n  const onSolveClicked = () => {\n    dispatch(solve());\n  };\n\n  return (\n    <div>\n      <Appbar position=\"fixed\" />\n\n      <Container maxWidth=\"sm\" align=\"center\">\n        <Panel playerIndex={-1} key={-1} winner={false} />\n\n        {data.players.map((player, index) => {\n          return (\n            <Panel key={index} playerIndex={index} winner={player.winner} />\n          );\n        })}\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={ACTION_BUTTON}\n          onClick={onSolveClicked}\n        >\n          Solve\n        </Button>\n      </Container>\n      <BottomPrompt message={data.errorPrompt} />\n\n      <CardPickerDialog open={data.showDialog} editing={data.editing} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport solverReducer from \"../features/solver/solverSlice\"\n\nexport default configureStore({\n  reducer: {solver: solverReducer}\n})\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}